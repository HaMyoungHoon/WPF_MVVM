<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	                xmlns:sys="clr-namespace:System;assembly=mscorlib"
	                xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:avd="https://github.com/Dirkster99/AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
	                xmlns:avdControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
	                xmlns:avdProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPF_MVVM;component/Styles/OverrideAvalonDock/OverrideAvalonDockVS2013DarkBrushs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
		This file contains the resource definitions for the docking button indicators
		which are shown when the user drags a document or tool window to place it
		somewhere else
	-->

    <!--
		Defines the height and width of the docking indicator buttons that are shown when
		documents or tool windows are dragged
	-->
    <sys:Double x:Key="DockingButtonWidthKey">40</sys:Double>
    <sys:Double x:Key="DockingButtonHeightKey">40</sys:Double>
    <PathGeometry x:Key="PinAutoHide" Figures="M 128,17.475L 130.842,17.475L 130.842,2.91001L 130.842,0.608195L 130.842,0.000223796L 139.593,0.000223796L 145.003,0.000223796L 145.424,0.000223796L 145.424,17.475L 148.413,17.475L 148.413,20.3848L 139.684,20.3848L 139.684,32.0003L 136.752,32.0003L 136.752,20.3848L 128,20.3848L 128,17.475 Z M 133.774,2.91007L 133.774,17.475L 139.593,17.475L 139.593,2.91007L 133.774,2.91007 Z" />
    <PathGeometry x:Key="HTabGroup" Figures="M 2.53856,7.38456L 2.53856,12.3846L 31.9231,12.3846L 31.9231,7.38456L 2.53856,7.38456 Z M 0,0.000162761L 34.3846,0.000162761L 34.3846,14.7694L 0,14.7694L 0,0.000162761 Z M 2.53861,24.6155L 2.53861,29.6155L 31.9232,29.6155L 31.9232,24.6155L 2.53861,24.6155 Z M 5.00801e-005,17.2309L 34.3846,17.2309L 34.3846,32.0001L 5.00801e-005,32.0001L 5.00801e-005,17.2309 Z " />
    <PathGeometry x:Key="VTabGroup" Figures="M 64,0.000223796L 101.319,0.000223796L 101.319,32.0002L 64,32.0002L 64,0.000223796 Z M 66.6804,8.03752L 66.6804,29.3154L 79.896,29.3154L 79.896,8.03752L 66.6804,8.03752 Z M 85.4232,8.03746L 85.4232,29.3154L 98.6388,29.3154L 98.6388,8.03746L 85.4232,8.03746 Z " />
    <PathGeometry x:Key="DockPaneLargeEmpty" Figures="M 192,19.4161L 192,12.5843L 202.892,12.5843L 204.584,10.8924L 204.584,0.000223796L 211.416,0.000223796L 211.416,10.8924L 213.108,12.5843L 224,12.5843L 224,19.4161L 213.108,19.4161L 211.416,21.108L 211.416,32.0002L 204.584,32.0002L 204.584,21.108L 202.892,19.4161L 192,19.4161 Z " />
    <PathGeometry x:Key="DockPaneEmpty" Figures="M 266.388,0.000223796L 277.612,0.000223796L 277.612,7.60856L 280.392,10.3883L 288,10.3883L 288,21.6122L 280.392,21.6122L 277.612,24.3919L 277.612,32.0002L 266.388,32.0002L 266.388,24.3919L 263.608,21.6122L 256,21.6122L 256,10.3883L 263.608,10.3883L 266.388,7.60856L 266.388,0.000223796 Z " />
    <PathGeometry x:Key="PinMenu" Figures="M 352.041,32.0005L 320,0.000162761L 384,0.000162761L 352.041,32.0005 Z " />
    <PathGeometry x:Key="PinClose" Figures="M 0,2.0345e-005L 7.62109,2.0345e-005L 19.2627,12.0551L 30.9043,2.0345e-005L 38.5241,2.0345e-005L 23.0726,16.0003L 38.5234,32L 30.9023,32L 19.2621,19.9462L 7.62177,32L 0.00195313,32L 15.4521,16.001L 0,2.0345e-005 Z" />
    <PathGeometry x:Key="PinRestore" Figures="M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
    <PathGeometry x:Key="PinMaximize" Figures="M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3 0,3z" />
    <PathGeometry x:Key="PinDocMenu" Figures="M 608,0.000223796L 640,0.000223796L 640,7.70652L 608,7.70652L 608,0.000223796 Z M 624.021,32.0002L 608,16.0001L 640,16.0001L 624.021,32.0002 Z " />
    <PathGeometry x:Key="Locked" Figures="M 1.77411,12.4183L 23.0627,12.4183C 24.0423,12.4183 24.8366,13.2126 24.8366,14.1925L 24.8366,30.1588C 24.8366,31.1386 24.0423,31.9329 23.0627,31.9329L 1.77411,31.9329C 0.794312,31.9329 0,31.1386 0,30.1588L 0,14.1925C 0,13.2126 0.794312,12.4183 1.77411,12.4183 Z M 14.5149,22.095C 15.0955,21.6111 15.4826,20.9337 15.4826,20.1595C 15.4826,18.805 14.4182,17.7404 13.0635,17.7404C 11.7087,17.7404 10.6442,18.8048 10.6442,20.1595C 10.6442,20.9337 11.0313,21.6111 11.6119,22.095L 11.6119,24.0302C 11.6119,24.8044 12.2893,25.4818 13.0633,25.4818C 13.8375,25.4818 14.5149,24.8044 14.5149,24.0302L 14.5149,22.095 Z M 20.9659,12.4183L 18.063,12.4183L 18.063,8.70894C 18.063,5.51565 15.4504,2.90304 12.257,2.90304C 9.06372,2.90304 6.45111,5.51565 6.45111,8.70894L 6.45111,12.4183L 3.54816,12.4183L 3.54816,8.70894C 3.54816,3.87069 7.41882,2.03401e-005 12.257,2.03401e-005C 17.0955,2.03401e-005 20.9659,3.87069 20.9659,8.70894L 20.9659,12.4183 Z " />

    <!--  Left Dock Button pointing left  -->
    <Viewbox
		x:Key="DockAnchorableLeft"
		x:Shared="false"
		Stretch="Uniform">
        <Grid Background="{DynamicResource DockingButtonStarBackgroundBrushKey}">
            <Border
				Padding="10"
				Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
				CornerRadius="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <Border
						Grid.Column="0"
						Width="50"
						Height="80"
						Margin="5"
						BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
						BorderThickness="20,5,5,5" />

                    <Border
						Grid.Column="1"
						Width="30"
						Height="80"
						Margin="5"
						BorderBrush="Transparent"
						BorderThickness="0" />

                    <Path
						Grid.Column="1"
						Width="25"
						Height="12.5"
						Data="F1M1,15L8,1 15,15z"
						Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
						RenderTransformOrigin="0.5,0.5"
						Stretch="Fill">
                        <Path.RenderTransform>
                            <RotateTransform Angle="270" />
                        </Path.RenderTransform>
                    </Path>

                </Grid>
            </Border>
        </Grid>
    </Viewbox>

    <!--  Right Dock Button pointing right  -->
    <Viewbox
		x:Key="DockAnchorableRight"
		x:Shared="false"
		Stretch="Uniform">
        <Grid Background="{DynamicResource DockingButtonStarBackgroundBrushKey}">
            <Border
				Padding="10"
				Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
				CornerRadius="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>

                    <Border
						Grid.Column="1"
						Width="50"
						Height="80"
						Margin="5"
						BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
						BorderThickness="5,5,20,5" />

                    <Border
						Grid.Column="0"
						Width="30"
						Height="80"
						Margin="5"
						BorderBrush="Transparent"
						BorderThickness="0" />

                    <Path
						Width="25"
						Height="12.5"
						Data="F1M1,15L8,1 15,15z"
						Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
						RenderTransformOrigin="0.5,0.5"
						Stretch="Fill">
                        <Path.RenderTransform>
                            <RotateTransform Angle="90" />
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Border>
        </Grid>
    </Viewbox>

    <!--  Top Dock Button pointing up  -->
    <Viewbox
		x:Key="DockAnchorableTop"
		x:Shared="false"
		Stretch="Uniform">
        <Grid Background="{DynamicResource DockingButtonStarBackgroundBrushKey}">
            <Border
				Padding="10"
				Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
				CornerRadius="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="4*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>
                    <!--  Transparent Background to size content  -->

                    <Border
						Grid.Row="0"
						Width="80"
						Height="50"
						Margin="5"
						BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
						BorderThickness="5,20,5,5" />

                    <Border
						Grid.Row="1"
						Width="80"
						Height="30"
						Margin="5"
						BorderBrush="Transparent"
						BorderThickness="0" />

                    <Path
						Grid.Row="1"
						Width="25"
						Height="12.5"
						Data="F1M1,15L8,1 15,15z"
						Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
						RenderTransformOrigin="0.5,0.5"
						Stretch="Fill" />
                </Grid>
            </Border>
        </Grid>
    </Viewbox>

    <!--  Bottom Dock Button pointing down  -->
    <Viewbox
		x:Key="DockAnchorableBottom"
		x:Shared="false"
		Stretch="Uniform">
        <Grid Background="{DynamicResource DockingButtonStarBackgroundBrushKey}">
            <Border
				Padding="10"
				Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
				CornerRadius="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="4*" />
                        <RowDefinition Height="4*" />
                    </Grid.RowDefinitions>
                    <!--  Transparent Background to size content  -->

                    <Border
						Grid.Row="1"
						Width="80"
						Height="50"
						Margin="5"
						BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
						BorderThickness="5,5,5,20" />

                    <Border
						Grid.Row="0"
						Width="80"
						Height="30"
						Margin="5"
						BorderBrush="Transparent"
						BorderThickness="0" />

                    <Path
						Width="25"
						Height="12.5"
						Data="F1M1,15L8,1 15,15z"
						Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
						RenderTransformOrigin="0.5,0.5"
						Stretch="Fill">
                        <Path.RenderTransform>
                            <RotateTransform Angle="180" />
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Border>
        </Grid>
    </Viewbox>

    <!--  Horizontal Split Dock Button with horizonatal dashed line in center  -->
    <Viewbox
		x:Key="DockDocumentTop"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="40"
					Height="40"
					Margin="4.75"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="2.5,10,2.5,2.5" />

                <Line
					Margin="0,7.5,0,0"
					VerticalAlignment="Center"
					Stroke="{DynamicResource DockingButtonForegroundBrushKey}"
					StrokeDashArray="1 1"
					StrokeThickness="1"
					X1="5"
					X2="45"
					Y1="0"
					Y2="0" />
            </Grid>
        </Border>
    </Viewbox>

    <!--  Center Dock Button without dashed line in center  -->
    <Viewbox
		x:Key="DockDocumentInside"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="40"
					Height="40"
					Margin="4.75"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="2.5,10,2.5,2.5" />
            </Grid>
        </Border>
    </Viewbox>

    <!--  Vertical Split Dock Button with vertical dashed line in center  -->
    <Viewbox
		x:Key="DockDocumentLeft"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="40"
					Height="40"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="2.5,10,2.5,2.5" />

                <Line
					Margin="5"
					HorizontalAlignment="Center"
					Stroke="{DynamicResource DockingButtonForegroundBrushKey}"
					StrokeDashArray="1 1"
					StrokeThickness="1"
					X1="0"
					X2="0"
					Y1="5"
					Y2="40" />

            </Grid>
        </Border>
    </Viewbox>

    <!--  Horizontal Split Dock Button with horizonatal dashed line in center  -->
    <Viewbox
		x:Key="DockDocumentBottom"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="40"
					Height="40"
					Margin="4.75"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="2.5,10,2.5,2.5" />

                <Line
					Margin="0,7.5,0,0"
					VerticalAlignment="Center"
					Stroke="{DynamicResource DockingButtonForegroundBrushKey}"
					StrokeDashArray="1 1"
					StrokeThickness="1"
					X1="5"
					X2="45"
					Y1="0"
					Y2="0" />
            </Grid>
        </Border>
    </Viewbox>

    <!--  Vertical Split Dock Button with vertical dashed line in center  -->
    <Viewbox
		x:Key="DockDocumentRight"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="40"
					Height="40"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="2.5,10,2.5,2.5" />

                <Line
					Margin="5"
					HorizontalAlignment="Center"
					Stroke="{DynamicResource DockingButtonForegroundBrushKey}"
					StrokeDashArray="1 1"
					StrokeThickness="1"
					X1="0"
					X2="0"
					Y1="0"
					Y2="40" />

            </Grid>
        </Border>
    </Viewbox>

    <!--  AsAnchorablePane buttons  -->
    <!--  DockDocumentAsAnchorableTop  -->
    <Viewbox
		x:Key="DockDocumentAsAnchorableTop"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="4*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="0"
					Width="80"
					Height="50"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="5,20,5,5" />

                <Border
					Grid.Row="1"
					Width="80"
					Height="30"
					Margin="5"
					BorderBrush="Transparent"
					BorderThickness="0" />

                <Path
					Grid.Row="1"
					Width="25"
					Height="12.5"
					Data="F1M1,15L8,1 15,15z"
					Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
					RenderTransformOrigin="0.5,0.5"
					Stretch="Fill" />
            </Grid>
        </Border>
    </Viewbox>

    <!--  DockDocumentAsAnchorableRight  -->
    <Viewbox
		x:Key="DockDocumentAsAnchorableRight"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="4*" />
                </Grid.ColumnDefinitions>

                <Border
					Grid.Column="1"
					Width="50"
					Height="80"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="5,5,20,5" />

                <Border
					Grid.Column="0"
					Width="30"
					Height="80"
					Margin="5"
					BorderBrush="Transparent"
					BorderThickness="0" />

                <Path
					Width="25"
					Height="12.5"
					Data="F1M1,15L8,1 15,15z"
					Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
					RenderTransformOrigin="0.5,0.5"
					Stretch="Fill">
                    <Path.RenderTransform>
                        <RotateTransform Angle="90" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </Viewbox>

    <!--  DockDocumentAsAnchorableBottom  -->
    <Viewbox
		x:Key="DockDocumentAsAnchorableBottom"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="4*" />
                </Grid.RowDefinitions>
                <!--  Transparent Background to size content  -->

                <Border
					Grid.Row="1"
					Width="80"
					Height="50"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="5,5,5,20" />

                <Border
					Grid.Row="0"
					Width="80"
					Height="30"
					Margin="5"
					BorderBrush="Transparent"
					BorderThickness="0" />

                <Path
					Width="25"
					Height="12.5"
					Data="F1M1,15L8,1 15,15z"
					Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
					RenderTransformOrigin="0.5,0.5"
					Stretch="Fill">
                    <Path.RenderTransform>
                        <RotateTransform Angle="180" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </Viewbox>

    <!--  DockDocumentAsAnchorableLeft  -->
    <Viewbox
		x:Key="DockDocumentAsAnchorableLeft"
		x:Shared="false"
		Stretch="Uniform">
        <Border
			Margin="5"
			Background="{DynamicResource DockingButtonStarBackgroundBrushKey}"
			CornerRadius="5">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <Border
					Grid.Column="0"
					Width="50"
					Height="80"
					Margin="5"
					BorderBrush="{DynamicResource DockingButtonForegroundBrushKey}"
					BorderThickness="20,5,5,5" />

                <Border
					Grid.Column="1"
					Width="30"
					Height="80"
					Margin="5"
					BorderBrush="Transparent"
					BorderThickness="0" />

                <Path
					Grid.Column="1"
					Width="25"
					Height="12.5"
					Data="F1M1,15L8,1 15,15z"
					Fill="{DynamicResource DockingButtonForegroundArrowBrushKey}"
					RenderTransformOrigin="0.5,0.5"
					Stretch="Fill">
                    <Path.RenderTransform>
                        <RotateTransform Angle="270" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </Viewbox>
    
    
    
    
    
    
    <!--  Source https://github.com/Dirkster99/MLib/blob/master/source/Components/MLib/Controls/Menu/ContextMenu.xaml  -->
    <ControlTemplate x:Key="MLibMenuItem" TargetType="{x:Type MenuItem}">
        <ControlTemplate.Resources>
            <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        </ControlTemplate.Resources>
        <!--  Border 1 Item with Submenu underneath  -->
        <Border
			x:Name="Border"
			Background="Transparent"
			BorderBrush="Transparent"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="True">
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
						x:Name="Col0"
						Width="Auto"
						MinWidth="17"
						SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition x:Name="Col3" Width="*" />
                </Grid.ColumnDefinitions>

                <ContentPresenter
					x:Name="Icon"
					Grid.Column="0"
					Margin="2,0,2,0"
					VerticalAlignment="Center"
					ContentSource="Icon" />

                <Border
					x:Name="GlyphPanel"
					Width="18"
					Height="18"
					Margin="2,0,2,0"
					HorizontalAlignment="Center"
					Background="{DynamicResource CheckMarkBackgroundBrushKey}"
					BorderBrush="{DynamicResource CheckMarkBorderBrushKey}"
					BorderThickness="2"
					CornerRadius="0"
					Visibility="Collapsed">

                    <Path
						x:Name="Glyph"
						Width="9"
						Height="11"
						HorizontalAlignment="Center"
						Data="{StaticResource Checkmark}"
						Fill="{DynamicResource CheckMarkForegroundBrushKey}"
						FlowDirection="LeftToRight" />
                </Border>

                <ContentPresenter
					x:Name="HeaderHost"
					Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True" />

                <ContentPresenter
					x:Name="IGTHost"
					Grid.Column="2"
					Margin="8,1,8,1"
					VerticalAlignment="Center"
					ContentSource="InputGestureText" />

                <Grid
					x:Name="ArrowPanel"
					Grid.Column="3"
					Margin="4,0,6,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center">
                    <Path
						x:Name="ArrowPanelPath"
						HorizontalAlignment="Right"
						VerticalAlignment="Center"
						Data="M0,0 L0,8 L4,4 z"
						Fill="{TemplateBinding Foreground}" />
                </Grid>
                <Popup
					x:Name="SubMenuPopup"
					AllowsTransparency="True"
					Focusable="false"
					HorizontalOffset="-1"
					IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					Placement="Right"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Grid Margin="0,0,5,5">
                        <!--  Border 2  -->
                        <Border
							x:Name="SubMenuBorder"
							Background="{DynamicResource SubmenuItemBackgroundKey}"
							BorderBrush="{DynamicResource MenuSeparatorBorderBrushKey}"
							BorderThickness="1"
							Effect="{DynamicResource DropShadowEffectKey}"
							SnapsToDevicePixels="True">
                            <Grid
								x:Name="SubMenu"
								Margin="2"
								Grid.IsSharedSizeScope="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                        </Border>
                        <!--  Border 3  -->
                        <Border
							x:Name="TransitionBorder"
							Width="0"
							Height="2"
							Margin="1,0,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Background="{DynamicResource SubmenuItemBackgroundKey}"
							BorderBrush="{DynamicResource SubmenuItemBackgroundKey}"
							BorderThickness="1"
							SnapsToDevicePixels="False" />
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--  A menu entry with check mark cannot have an icon  -->
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <!--<Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Padding" Value="6,0,6,2"/>
                                    <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                                    <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                    <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1"/>
                                    <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2"/>
                                    <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Padding" Value="6,0,6,2"/>
                                    <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                                    <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                                </Trigger>-->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="10,3,0,3" />
                <Setter TargetName="Border" Property="MinHeight" Value="22" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundKey}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="10,3,0,3" />
                <Setter TargetName="Border" Property="MinHeight" Value="22" />
                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundKey}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <!--  Border Applies to item with sub-menu attached to it  -->
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ItemBackgroundHoverKey}" />
            </Trigger>
            <!-- MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="TopLevelHeader"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHighlightedBackgroundKey}"/>
            </>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="TopLevelItem"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemHighlightedBackgroundKey}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="SubmenuHeader"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlightedKey}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlightedKey}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="SubmenuItem"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlightedKey}"/>
            </MultiTrigger-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSubmenuOpen" Value="true" />
                    <Condition Property="Role" Value="TopLevelHeader" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundKey}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuSeparatorBorderBrushKey}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
            </MultiTrigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource ItemBackgroundSelectedKey}" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabledKey}" />
                <Setter TargetName="GlyphPanel" Property="Background" Value="{DynamicResource DisabledSubMenuItemBackgroundBrushKey}" />
                <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{DynamicResource DisabledSubMenuItemBorderBrushKey}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DropDownControlArea" TargetType="{x:Type avdControls:DropDownControlArea}" />

    <!--
		Re-styling this in avd since the menu on the drop-down button for more documents is otherwise black
		BugFix for Issue http://avd.codeplex.com/workitem/15743
	-->
    <Style x:Key="avdThemeVs2013MenuItemStyle" BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource MLibMenuItem}" />
    </Style>

    <Style BasedOn="{StaticResource avdThemeVs2013MenuItemStyle}" TargetType="{x:Type avd:MenuItemEx}">
        <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
        <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
        <Setter Property="Command" Value="{Binding Path=., Converter={avd:ActivateCommandLayoutItemFromLayoutModelConverter}}" />
        <!--
			Retemplate ControlTemplate of MenuItem to get rid of blue'ish highlighting colors on menu item
			https://stackoverflow.com/questions/34888636/change-background-color-of-menuitem-on-mouseover
		-->
    </Style>


    <Style BasedOn="{StaticResource {x:Type ContextMenu}}" TargetType="{x:Type avd:ContextMenuEx}" />
    <Style x:Key="avdThemeVs2013ToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource avd_ThemeMetro_BaseColor31}" />
                <Setter Property="Background" Value="{DynamicResource avd_ThemeMetro_BaseColor10}" />-->
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource avd_ThemeMetro_BaseColor31}" />
                <Setter Property="Background" Value="{DynamicResource avd_ThemeMetro_BaseColor10}" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="avdThemeVs2013ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DocumentPaneControlStyle  -->
    <Style x:Key="avdThemeVs2013DocumentPaneControlStyle" TargetType="{x:Type avd:LayoutDocumentPaneControl}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource TabBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutDocumentPaneControl}">
                    <Grid
						ClipToBounds="true"
						KeyboardNavigation.TabNavigation="Local"
						SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid
							Margin="1,0"
							Grid.Row="0"
							Panel.ZIndex="1"
							Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type avd:LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={avd:BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border
								x:Name="BD"
								Grid.ColumnSpan="2"
								BorderBrush="{DynamicResource DocumentWellTabSelectedActiveBackground}"
								BorderThickness="0,0,0,2" />
                            <avd:DocumentPaneTabPanel
								x:Name="HeaderPanel"
								Grid.Row="0"
								Grid.Column="0"
								Margin="0"
								IsItemsHost="true"
								KeyboardNavigation.TabIndex="1" />
                            <avd:DropDownButton
								x:Name="MenuDropDownButton"
                                Width="14"
                                Height="14"
                                Margin="0,0,-1,5"
								Grid.Column="1"
								VerticalAlignment="Bottom"
								Focusable="False"
								Style="{StaticResource avdThemeVs2013ToolButtonStyle}">
                                <avd:DropDownButton.DropDownContextMenu>
                                    <avd:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}" />
                                </avd:DropDownButton.DropDownContextMenu>
                                <Path
									x:Name="MenuDropDownButtonImage"
									Height="8"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Data="{DynamicResource PinDocMenu}"
									Fill="{DynamicResource DocumentWellOverflowButtonDefaultGlyph}"
									Stretch="Uniform" />
                            </avd:DropDownButton>
                        </Grid>
                        <Border
							x:Name="ContentPanel"
							Grid.Row="1"
							Grid.Column="0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Background="{TemplateBinding Background}"
							BorderBrush="{DynamicResource PanelBorderBrush}"
							BorderThickness="1,0,1,1"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
								x:Name="PART_SelectedContentHost"
								Margin="0"
								ContentSource="SelectedContent"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="MenuDropDownButton" Property="IsMouseOver" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource DocumentWellOverflowButtonHoveredBackground}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource DocumentWellOverflowButtonHoveredBorder}" />
                            <Setter TargetName="MenuDropDownButtonImage" Property="Fill" Value="{DynamicResource DocumentWellOverflowButtonHoveredGlyph}" />
                        </Trigger>

                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource DocumentWellOverflowButtonPressedBackground}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource DocumentWellOverflowButtonPressedBorder}" />
                            <Setter TargetName="MenuDropDownButtonImage" Property="Fill" Value="{DynamicResource DocumentWellOverflowButtonPressedGlyph}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BD" Property="BorderBrush" Value="{DynamicResource DocumentWellTabSelectedInactiveBackground}" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter TargetName="BD" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ShowHeader}" Value="False">
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="1" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="{DynamicResource DocumentWellTabUnselectedBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource DocumentWellTabUnselectedText}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Padding" Value="6,1" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border
										x:Name="Bd"
										Background="{TemplateBinding Background}"
										BorderBrush="{Binding Background, RelativeSource={RelativeSource Self}}"
										BorderThickness="0,0,0,2" />
                                    <ContentPresenter
										x:Name="Content"
										HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										ContentSource="Header"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>

                                    <!--  Document Well : Tab / Selected, active  -->
                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DocumentWellTabSelectedActiveBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource DocumentWellTabSelectedActiveText}" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>

                                    <!--  Document Well : Tab / Selected, inactive  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False" />
                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DocumentWellTabSelectedInactiveBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource DocumentWellTabSelectedInactiveText}" />
                                    </MultiDataTrigger>

                                    <!--  Document Well : Tab / Unselected  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False" />
                                            <Condition Binding="{Binding IsSelected}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                    </MultiDataTrigger>

                                    <!--  Document Well : Tab / Unselected, hovered  -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DocumentWellTabUnselectedHoveredBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource DocumentWellTabUnselectedHoveredText}" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>

                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avd:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avd:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  AnchorablePaneControlStyle  -->
    <Style x:Key="avdThemeVs2013AnchorablePaneControlStyle" TargetType="{x:Type avd:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{DynamicResource TabBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutAnchorablePaneControl}">
                    <Grid
						ClipToBounds="true"
						KeyboardNavigation.TabNavigation="Local"
						SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
							x:Name="ContentPanel"
							Grid.Row="0"
							Grid.Column="0"
							Margin="0"
							Background="{TemplateBinding Background}"
							BorderBrush="{DynamicResource PanelBorderBrush}"
							BorderThickness="0"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
								x:Name="PART_SelectedContentHost"
								Margin="{TemplateBinding Padding}"
								ContentSource="SelectedContent"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <avd:AnchorablePaneTabPanel
							x:Name="HeaderPanel"
							Grid.Row="1"
							Margin="0"
							Panel.ZIndex="1"
							IsItemsHost="true"
							KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="{DynamicResource ToolWindowTabUnselectedBackground}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource ToolWindowTabUnselectedText}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border
										x:Name="SelectedBD"
										Margin="1,-1,1,0"
										BorderBrush="{DynamicResource ToolWindowTabSelectedActiveBackground}"
										BorderThickness="0,1,0,0"
										Visibility="Collapsed" />
                                    <Border
										x:Name="Bd"
										Margin="0"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding Background}"
										BorderThickness="1,0,1,1">
                                        <ContentPresenter
											x:Name="Content"
											Margin="6,1,6,3"
											HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											ContentSource="Header"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter TargetName="SelectedBD" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource PanelBorderBrush}" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>

                                    <!--  Tool Window : Tab / Selected, active  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                            <Condition Binding="{Binding IsActive}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource ToolWindowTabSelectedActiveBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToolWindowTabSelectedActiveText}" />
                                    </MultiDataTrigger>

                                    <!--  Tool Window : Tab / Selected, inactive  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                            <Condition Binding="{Binding IsActive}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource ToolWindowTabSelectedInactiveBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToolWindowTabSelectedInactiveText}" />
                                    </MultiDataTrigger>

                                    <!--  Tool Window : Tab / Unselected, hovered  -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource ToolWindowTabUnselectedHoveredBackground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToolWindowTabUnselectedHoveredText}" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>

                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avd:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avd:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="avd:AnchorablePaneTitle">
        <Setter Property="Background" Value="{DynamicResource ToolWindowCaptionInactiveBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolWindowCaptionInactiveText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="2,2,3,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle
								x:Name="DragHandleGeometryPlaceholder"
								Fill="{DynamicResource ToolWindowCaptionInactiveGrip}"
								Visibility="Collapsed" />
                            <DockPanel>
                                <Border
									Padding="2,0,4,0"
									HorizontalAlignment="Left"
									Background="{TemplateBinding Background}">
                                    <avd:DropDownControlArea
										DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
										DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
										Style="{DynamicResource DropDownControlArea}">
                                        <ContentPresenter
											x:Name="Header"
											Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
											TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </avd:DropDownControlArea>
                                </Border>
                                <Rectangle
									x:Name="DragHandleTexture"
									Height="5"
									Margin="4,0,2,0"
									VerticalAlignment="Center"
									UseLayoutRounding="True"
									RenderOptions.BitmapScalingMode="NearestNeighbor">
                                    <Rectangle.Fill>
                                        <DrawingBrush
											TileMode="Tile"
											Viewbox="0,0,4,4"
											ViewboxUnits="Absolute"
											Viewport="0,0,4,4"
											ViewportUnits="Absolute">
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing Brush="{Binding Fill, ElementName=DragHandleGeometryPlaceholder, Mode=OneWay, Converter={avd:NullToDoNothingConverter}}">
                                                    <GeometryDrawing.Geometry>
                                                        <GeometryGroup>
                                                            <GeometryGroup.Children>
                                                                <RectangleGeometry Rect="0,0,1,1" />
                                                                <RectangleGeometry Rect="2,2,1,1" />
                                                            </GeometryGroup.Children>
                                                        </GeometryGroup>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DockPanel>
                            <avd:DropDownButton
								x:Name="MenuDropDownButton"
								Grid.Column="1"
								Margin="1,1,1,0"
								Width="15"
                                Height="15"
								VerticalAlignment="Center"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource avdThemeVs2013ToolButtonStyle}"
								ToolTip="{x:Static avdProperties:Resources.Anchorable_CxMenu_Hint}">
                                <Path
									x:Name="PART_ImgMenuPin"
									Margin="0,0,0,1"
									Width="8"
									Height="8"
									Data="{DynamicResource PinMenu}"
									Fill="{DynamicResource ToolWindowCaptionButtonInactiveGlyph}"
									Stretch="Uniform" />
                            </avd:DropDownButton>

                            <Button
								x:Name="PART_AutoHidePin"
								Grid.Column="2"
								Margin="1,1,1,0"
								Width="15"
                                Height="15"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource avdThemeVs2013ButtonStyle}"
								ToolTip="{x:Static avdProperties:Resources.Anchorable_BtnAutoHide_Hint}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
                                <Path
									x:Name="PART_ImgAutoHidePin"
									UseLayoutRounding="True"
									RenderOptions.BitmapScalingMode="NearestNeighbor"
									Width="11"
									Height="11"
									Data="{DynamicResource PinAutoHide}"
									Fill="{DynamicResource ToolWindowCaptionButtonInactiveGlyph}"
									Stretch="Uniform" />
                            </Button>
                            <Button
								x:Name="PART_HidePin"
								Grid.Column="3"
								Margin="0,1,1,0"
                                Width="15"
                                Height="15"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
								Style="{StaticResource avdThemeVs2013ButtonStyle}"
								ToolTip="{x:Static avdProperties:Resources.Anchorable_BtnClose_Hint}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
                                <Path
									x:Name="PART_ImgHidePin"
									Width="10"
									Height="10"
									Margin="1,0,0,1"
									VerticalAlignment="Center"
									Data="{DynamicResource PinClose}"
									Fill="{DynamicResource ToolWindowCaptionButtonInactiveGlyph}"
									Stretch="Uniform" />
                            </Button>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static avdProperties:Resources.Document_Close}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption / Active  -->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ToolWindowCaptionActiveBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolWindowCaptionActiveText}" />
                            <Setter TargetName="DragHandleGeometryPlaceholder" Property="Fill" Value="{DynamicResource ToolWindowCaptionActiveGrip}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption : Button / Active  -->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_ImgMenuPin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveGlyph}" />
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveGlyph}" />
                            <Setter TargetName="PART_ImgHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveGlyph}" />
                        </DataTrigger>

                        <!--  Tool Window : Caption : Button / Active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=MenuDropDownButton}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBackground}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBackground}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_HidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBackground}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Tool Window : Caption : Button / Inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=MenuDropDownButton}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBackground}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_AutoHidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBackground}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_HidePin}" Value="True" />
                                <Condition Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBackground}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonInactiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Tool Window : Caption : Button / Active / Inactive, pressed  -->
                        <Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBackground}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBorder}" />
                            <Setter TargetName="PART_ImgMenuPin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActivePressedGlyph}" />
                        </Trigger>
                        <Trigger SourceName="PART_AutoHidePin" Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBackground}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBorder}" />
                            <Setter TargetName="PART_ImgAutoHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActivePressedGlyph}" />
                        </Trigger>
                        <Trigger SourceName="PART_HidePin" Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Background" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBackground}" />
                            <Setter TargetName="PART_HidePin" Property="BorderBrush" Value="{DynamicResource ToolWindowCaptionButtonActivePressedBorder}" />
                            <Setter TargetName="PART_ImgHidePin" Property="Fill" Value="{DynamicResource ToolWindowCaptionButtonActivePressedGlyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="avdThemeVs2013AnchorSideTemplate" TargetType="{x:Type avd:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel
						MinWidth="6"
						MinHeight="6"
						Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avd:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={avd:AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="avdThemeVs2013AnchorGroupTemplate" TargetType="{x:Type avd:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Style.Resources>
                        <RotateTransform x:Key="LeftRightAnchorSideRotateTransform" Angle="90" />
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Model.Parent.Side, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter Property="LayoutTransform" Value="{StaticResource LeftRightAnchorSideRotateTransform}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Model.Parent.Side, RelativeSource={RelativeSource TemplatedParent}}" Value="Right">
                            <Setter Property="LayoutTransform" Value="{StaticResource LeftRightAnchorSideRotateTransform}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="avdThemeVs2013AnchorTemplate" TargetType="{x:Type avd:LayoutAnchorControl}">
        <Border
			x:Name="Bd"
			Margin="0,0,12,0"
			Padding="0,6,0,4"
			Background="{DynamicResource AutoHideTabDefaultBackground}"
			BorderBrush="{DynamicResource AutoHideTabDefaultBorder}"
			BorderThickness="0,0,0,6"
			TextOptions.TextFormattingMode="Display"
			TextElement.Foreground="{DynamicResource AutoHideTabDefaultText}">
            <ContentPresenter
				Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
				ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
				ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Side" Value="Right">
                <Setter TargetName="Bd" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="Bd" Property="Padding" Value="0,3,0,7" />
            </Trigger>

            <Trigger Property="Side" Value="Top">
                <Setter TargetName="Bd" Property="BorderThickness" Value="0,6,0,0" />
                <Setter TargetName="Bd" Property="Padding" Value="0,3,0,7" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AutoHideTabHoveredBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AutoHideTabHoveredBorder}" />
                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource AutoHideTabHoveredText}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type avd:OverlayWindow}" TargetType="{x:Type avd:OverlayWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
                        <!--
							Drop target rectangle that is displayed before a document or tool window
							is dropped into a drop target location
						-->
                        <Path
							x:Name="PART_PreviewBox"
							Fill="{DynamicResource PreviewBoxBackgroundBrushKey}"
							Stroke="{DynamicResource PreviewBoxBorderBrushKey}"
							StrokeThickness="0.5" />

                        <!--
							Outmost Outter 4 overlay buttons that are displayed at border of MainWindow
							when user drags tool window over another tool window or document and the
							avd air space contains additional document(s) and tool windows (s).
						-->
                        <Grid x:Name="PART_DockingManagerDropTargets">
                            <ContentControl
								x:Name="PART_DockingManagerDropTargetLeft"
								Width="{DynamicResource DockingButtonWidthKey}"
								Height="{DynamicResource DockingButtonHeightKey}"
								Margin="10"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="Transparent"
								BorderBrush="Transparent"
								Content="{StaticResource DockAnchorableLeft}" />

                            <ContentControl
								x:Name="PART_DockingManagerDropTargetRight"
								Width="{DynamicResource DockingButtonWidthKey}"
								Height="{DynamicResource DockingButtonHeightKey}"
								Margin="10"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="Transparent"
								BorderBrush="Transparent"
								Content="{StaticResource DockAnchorableRight}" />

                            <ContentControl
								x:Name="PART_DockingManagerDropTargetBottom"
								Width="{DynamicResource DockingButtonWidthKey}"
								Height="{DynamicResource DockingButtonHeightKey}"
								Margin="10"
								HorizontalAlignment="Center"
								VerticalAlignment="Bottom"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="Transparent"
								BorderBrush="Transparent"
								Content="{StaticResource DockAnchorableBottom}" />

                            <ContentControl
								x:Name="PART_DockingManagerDropTargetTop"
								Width="{DynamicResource DockingButtonWidthKey}"
								Height="{DynamicResource DockingButtonHeightKey}"
								Margin="10"
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="Transparent"
								BorderBrush="Transparent"
								Content="{StaticResource DockAnchorableTop}" />

                        </Grid>

                        <!--
							Is displayed as center cross with a max of 5 buttons when a toolwindow is
							dragged over another tool window
						-->
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <!--  Gray Star Background  -->
                            <Path
								Height="122"
								Data="{DynamicResource DockPaneEmpty}"
								Fill="{DynamicResource DockingButtonStarBackgroundBrushKey}"
								Stretch="Uniform"
								Stroke="{DynamicResource DockingButtonStarBorderBrushKey}"
								StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
									x:Name="PART_AnchorablePaneDropTargetTop"
									Grid.Row="0"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableTop}" />
                                <ContentControl
									x:Name="PART_AnchorablePaneDropTargetRight"
									Grid.Row="1"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableRight}" />
                                <ContentControl
									x:Name="PART_AnchorablePaneDropTargetBottom"
									Grid.Row="2"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableBottom}" />
                                <ContentControl
									x:Name="PART_AnchorablePaneDropTargetLeft"
									Grid.Row="1"
									Grid.Column="0"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
									x:Name="PART_AnchorablePaneDropTargetInto"
									Grid.Row="1"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentInside}" />
                            </Grid>
                        </Grid>

                        <!--  Is displayed as center cross with a max of 5 buttons when documents are dragged over the document container.  -->
                        <Grid x:Name="PART_DocumentPaneDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
								Height="122"
								Data="{DynamicResource DockPaneEmpty}"
								Fill="{DynamicResource DockingButtonStarBackgroundBrushKey}"
								Stretch="Uniform"
								Stroke="{DynamicResource DockingButtonStarBorderBrushKey}"
								StrokeThickness="1" />

                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetTop"
									Grid.Row="0"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentTop}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetRight"
									Grid.Row="1"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentRight}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetBottom"
									Grid.Row="2"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentBottom}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetLeft"
									Grid.Row="1"
									Grid.Column="0"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetInto"
									Grid.Row="1"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentInside}" />
                            </Grid>
                        </Grid>

                        <!--  Center star with a max of 9 buttons shown when tool window is dragged of document container  -->
                        <Grid x:Name="PART_DocumentPaneFullDropTargets">

                            <!--  Gray Star Background  -->
                            <Path
								Width="204"
								Data="{DynamicResource DockPaneLargeEmpty}"
								Fill="{DynamicResource DockingButtonStarBackgroundBrushKey}"
								Stretch="Uniform"
								Stroke="{DynamicResource DockingButtonStarBorderBrushKey}"
								StrokeThickness="1" />
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--  Inner 5 buttons of star shapped control  -->
                                <ContentControl
									x:Name="PART_DocumentPaneFullDropTargetTop"
									Grid.Row="1"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentTop}" />
                                <ContentControl
									x:Name="PART_DocumentPaneFullDropTargetRight"
									Grid.Row="2"
									Grid.Column="3"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentRight}" />
                                <ContentControl
									x:Name="PART_DocumentPaneFullDropTargetBottom"
									Grid.Row="3"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentBottom}" />
                                <ContentControl
									x:Name="PART_DocumentPaneFullDropTargetLeft"
									Grid.Row="2"
									Grid.Column="1"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentLeft}" />
                                <!--  Center button of star shapped control  -->
                                <ContentControl
									x:Name="PART_DocumentPaneFullDropTargetInto"
									Grid.Row="2"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentInside}" />

                                <!--  Outer 4 buttons of star shapped control  -->
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetTopAsAnchorablePane"
									Grid.Row="0"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableTop}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetRightAsAnchorablePane"
									Grid.Row="2"
									Grid.Column="4"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableRight}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane"
									Grid.Row="4"
									Grid.Column="2"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableBottom}" />
                                <ContentControl
									x:Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane"
									Grid.Row="2"
									Grid.Column="0"
									Width="{DynamicResource DockingButtonWidthKey}"
									Height="{DynamicResource DockingButtonHeightKey}"
									HorizontalContentAlignment="Stretch"
									VerticalContentAlignment="Stretch"
									Background="Transparent"
									BorderBrush="Transparent"
									Content="{StaticResource DockDocumentAsAnchorableLeft}" />
                            </Grid>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="avdThemeVs2013DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="avdThemeVs2013AnchorableHeaderTemplate">
        <TextBlock
			Text="{Binding Title}"
			TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="avdThemeVs2013DocumentTitleTemplate">
        <TextBlock
			VerticalAlignment="Center"
			Text="{Binding Title}"
			TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="avdThemeVs2013AnchorableTitleTemplate">
        <TextBlock
			VerticalAlignment="Center"
			Text="{Binding Title}"
			TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="avdThemeVs2013IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={avd:NullToDoNothingConverter}}" Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="avdThemeVs2013AnchorableContextMenu">
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avdProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}" Header="{x:Static avdProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avdProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}" Header="{x:Static avdProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem
			Command="{Binding Path=HideCommand}"
			Header="{x:Static avdProperties:Resources.Anchorable_Hide}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="avdThemeVs2013DocumentContextMenu">
        <MenuItem
			Command="{Binding Path=CloseCommand}"
			Header="{x:Static avdProperties:Resources.Document_Close}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="{x:Static avdProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=CloseAllCommand}" Header="{x:Static avdProperties:Resources.Document_CloseAll}" />
        <MenuItem Command="{Binding Path=FloatCommand}" Header="{x:Static avdProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}" Header="{x:Static avdProperties:Resources.Document_DockAsDocument}" />
        <MenuItem
			Command="{Binding Path=NewHorizontalTabGroupCommand}"
			Header="{x:Static avdProperties:Resources.Document_NewHorizontalTabGroup}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
					Width="14"
					Height="14"
					VerticalAlignment="Center"
					Data="{DynamicResource HTabGroup}"
					Fill="{DynamicResource ToolWindowCaptionButtonInactiveGlyph}"
					Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem
			Command="{Binding Path=NewVerticalTabGroupCommand}"
			Header="{x:Static avdProperties:Resources.Document_NewVerticalTabGroup}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
            <MenuItem.Icon>
                <Path
					Width="14"
					Height="14"
					VerticalAlignment="Center"
					Data="{DynamicResource VTabGroup}"
					Fill="{DynamicResource ToolWindowCaptionButtonInactiveGlyph}"
					Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
			Command="{Binding Path=MoveToNextTabGroupCommand}"
			Header="{x:Static avdProperties:Resources.Document_MoveToNextTabGroup}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}" />
        <MenuItem
			Command="{Binding Path=MoveToPreviousTabGroupCommand}"
			Header="{x:Static avdProperties:Resources.Document_MoveToPreviousTabGroup}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}" />
    </ContextMenu>

    <!--  DockingManager  -->
    <Style x:Key="{x:Type avd:DockingManager}" TargetType="{x:Type avd:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource avdThemeVs2013DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource avdThemeVs2013AnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{StaticResource avdThemeVs2013AnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource avdThemeVs2013AnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource avdThemeVs2013AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource avdThemeVs2013DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource avdThemeVs2013AnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource avdThemeVs2013DocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource avdThemeVs2013AnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu" Value="{StaticResource avdThemeVs2013AnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu" Value="{StaticResource avdThemeVs2013DocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource avdThemeVs2013DocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{StaticResource avdThemeVs2013IconContentTemplate}" />
        <Setter Property="GridSplitterWidth" Value="6" />
        <Setter Property="GridSplitterHeight" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:DockingManager}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
								Grid.Row="1"
								Grid.Column="1"
								Content="{TemplateBinding LayoutRootPanel}" />
                            <ContentPresenter
								Grid.Row="1"
								Grid.Column="2"
								Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter
								Grid.Row="1"
								Grid.Column="0"
								Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter
								Grid.Row="0"
								Grid.Column="1"
								Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter
								Grid.Row="2"
								Grid.Column="1"
								Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter
								x:Name="PART_AutoHideArea"
								Grid.Row="1"
								Grid.Column="1"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								Content="{TemplateBinding AutoHideWindow}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  LayoutGridResizerControl  -->
    <Style x:Key="{x:Type avd:LayoutGridResizerControl}" TargetType="{x:Type avd:LayoutGridResizerControl}">
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutGridResizerControl}">
                    <Border Background="{DynamicResource Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avd:LayoutDocumentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutDocumentControl}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avd:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutDocumentTabItem}">
                    <avd:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
						Style="{DynamicResource DropDownControlArea}">
                        <Border
							x:Name="Header"
							Margin="0,0,0,2"
							Padding="1,0"
							Height="19"
							Background="{TemplateBinding Background}"
							BorderBrush="{DynamicResource Background}"
							BorderThickness="0,0,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" Background="Transparent" />
                                <ContentPresenter
									Margin="4,0,4,1"
									VerticalAlignment="Bottom"
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
									ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
									TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" />
                                <!--  Close button should be moved out to the container style  -->
                                <Button
									x:Name="DocumentCloseButton"
									Grid.Column="1"
									Width="15"
                                    Height="15"
									Margin="3,0"
									HorizontalAlignment="Center"
									VerticalAlignment="Bottom"
									Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
									Style="{StaticResource avdThemeVs2013ButtonStyle}"
									ToolTip="{x:Static avdProperties:Resources.Document_Close}"
									Visibility="Hidden">
                                    <Path
										x:Name="PART_ImgPinClose"
										Width="10"
										Height="10"
										Margin="1,0,0,1"
										VerticalAlignment="Center"
										Data="{DynamicResource PinClose}"
										Fill="{DynamicResource ToolWindowCaptionActiveText}"
										Stretch="Uniform" />
                                </Button>
                            </Grid>
                        </Border>
                    </avd:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <!--  Close button visibility  -->
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLastFocusedDocument}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsActive}" Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--BD: 17.08.2020 use HideCommand if CanClose=false but CanHide=true-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Command" Value="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="DocumentCloseButton" Property="ToolTip" Value="{x:Static avdProperties:Resources.Anchorable_Hide}" />
                        </MultiDataTrigger>
                        <!--BD: 17.08.2020 hide button if both CanClose=false and CanHide=false-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CanClose}" Value="false" />
                                <Condition Binding="{Binding Path=CanHide}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active  -->
                        <DataTrigger Binding="{Binding IsActive}" Value="true">
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                        </DataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered, button hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Unselected, tab hovered, button pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsActive}" Value="False" />
                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonPressedBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonPressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonUnselectedTabHoveredButtonPressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, tab hovered, button pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Mulitple Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive}" Value="False" />
                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=DocumentCloseButton}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Header" Property="Padding" Value="0" />
                            <Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="DocumentCloseButton" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avd:LayoutAnchorableTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutAnchorableTabItem}">
                    <avd:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
						Style="{DynamicResource DropDownControlArea}">
                        <Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
									ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}" />
                                <avd:DropDownControlArea
									Grid.Column="0"
									DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
									DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </avd:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avd:LayoutAnchorableControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutAnchorableControl}">
                    <Border
						x:Name="Bd"
                        Background="{TemplateBinding Background}"
						BorderBrush="{DynamicResource PanelBorderBrush}"
						BorderThickness="1,0,1,1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header">
                                <avd:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <!--
								Added ContentTemplate and ContentTemplateSelector
								https://github.com/xceedsoftware/wpftoolkit/issues/1525
							-->
                            <ContentPresenter
								Grid.Row="1"
								Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{Binding LayoutItem.View.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplateSelector="{Binding LayoutItem.View.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
								FlowDirection="{TemplateBinding FlowDirection}" />

                            <!--
                                <ContentPresenter
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avd:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>
							-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--
							Hide the title if the control is directly hosted in floating window
							The floating window control will show the title if there is only one control to host
							without any other LayoutAnchorableControl
						-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--
								Also hide the title, if model cannot be bound which can happen when using virtualization
								See Issue #148 Drop Down Menu for LayoutAnchorables is not correct with Virtualization
							-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                        <!-- Correct BorderThickness for all types of layouts LayoutAnchorableControls -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avd:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avd:LayoutDocumentFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource FloatingDocumentWindowBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FloatingDocumentWindowBorder}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
					CaptionHeight="32"
					CornerRadius="0"
					GlassFrameThickness="0"
					ResizeBorderThickness="10"
					ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="32" />
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition x:Name="MaximizedAddBorder" Height="0" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border
									x:Name="Header"
									Padding="0,0,0,0"
									Background="Transparent"
									TextElement.Foreground="{DynamicResource DocumentWellTabSelectedInactiveText}">
                                    <Grid UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
											TextElement.Foreground="{DynamicResource DocumentWellTabSelectedInactiveText}"
											x:Name="HeaderContent"
                                            Margin="12,4,12,0"
											Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Button
											x:Name="PART_PinMaximize"
											Grid.Column="1"
                                            Width="34"
											Height="26"
											VerticalAlignment="Top"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Window_Maximize}"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:InverseBoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinMaximize"
												Width="9"
												Height="9"
												RenderOptions.EdgeMode="Aliased"
												VerticalAlignment="Center"
												Data="{DynamicResource PinMaximize}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>

                                        <Button
											x:Name="PART_PinRestore"
											Grid.Column="1"
                                            Width="34"
											Height="26"
                                            VerticalAlignment="Top"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Window_Restore}"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:BoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinRestore"
												Width="10"
												Height="10"
												VerticalAlignment="Center"
												Data="{DynamicResource PinRestore}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>

                                        <Button
											x:Name="PART_PinClose"
											Grid.Column="2"
                                            Width="34"
											Height="26"
											VerticalAlignment="Top"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Document_Close}"
											Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinClose"
												Width="10"
												Height="10"
												VerticalAlignment="Center"
												Data="{DynamicResource PinClose}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="2" Margin="6" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Show Header Bar (Window Title and Restore/Maximize/Minimize buttons with highlighting color if this IsActive)  -->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="7" />
                            <Setter TargetName="MaximizedAddBorder" Property="Height" Value="4" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="True">
                            <!--<Setter TargetName="Header" Property="Background" Value="{DynamicResource DocumentWellTabSelectedActiveBackground}" />-->
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource DocumentWellTabSelectedActiveText}" />
                        </DataTrigger>

                        <!--  In VS DocumentFloatingWindow colors change only for header text and icon if window is inactive  -->
                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Mark Active Document on CLick in Document Well : Tab : Button / Selected, active  -->
                        <!--
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true">
							<Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
							<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
							<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                        </DataTrigger>-->

                        <!--  Document Well : Tab : Button / Selected, active, hovered  -->
                        <!--  Highlight Maximize Button of Floating Window on MouseOver  -->
                        <!--<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
							<Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
							<Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
						</MultiDataTrigger>-->

                        <!--  Highlight Restore Button of Floating Window on MouseOver  -->
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
							<Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>-->

                        <!--  Highlight Close Button of Floating Window on MouseOver  -->
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>-->

                        <!--  Document Well : Tab : Button / Selected, active, pressed  -->
                        <!--  Highlight Maximize Button of Floating Window on MouseClick and Holding Bottun (even when Mouse is moved away)  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Highlight Restore Button of Floating Window on MouseClick and Holding Bottun (even when Mouse is moved away)  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Highlight Close Button of Floating Window on MouseClick and Holding Bottun (even when Mouse is moved away)  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avd:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avd:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="{DynamicResource FloatingToolWindowBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FloatingToolWindowBorder}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
					CaptionHeight="21"
					CornerRadius="0"
					GlassFrameThickness="0"
					ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="21" />
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
									x:Name="Header"
									Padding="2,2,3,3"
									Background="{DynamicResource ToolWindowCaptionInactiveBackground}"
									TextElement.Foreground="{DynamicResource ToolWindowCaptionInactiveText}">
                                    <Grid UseLayoutRounding="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Rectangle
											x:Name="DragHandleGeometryPlaceholder"
											Fill="{DynamicResource ToolWindowCaptionInactiveGrip}"
											Visibility="Collapsed" />

                                        <DockPanel>
                                            <Border Padding="2,0,4,0" HorizontalAlignment="Left" Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:BoolToVisibilityConverter}}">
                                                <avd:DropDownControlArea
													DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
													DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
													Style="{DynamicResource DropDownControlArea}">
                                                    <ContentPresenter
													Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
													ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
													ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                                </avd:DropDownControlArea>
                                            </Border>

                                            <Rectangle
												x:Name="DragHandleTexture"
												Height="5"
												Margin="4,0,4,0"
												VerticalAlignment="Center" 
												UseLayoutRounding="True" 
												RenderOptions.BitmapScalingMode="NearestNeighbor">
                                                <Rectangle.Fill>
                                                    <DrawingBrush
														TileMode="Tile"
														Viewbox="0,0,4,4"
														ViewboxUnits="Absolute"
														Viewport="0,0,4,4"
														ViewportUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <GeometryDrawing Brush="{Binding Fill, ElementName=DragHandleGeometryPlaceholder, Mode=OneWay, Converter={avd:NullToDoNothingConverter}}">
                                                                <GeometryDrawing.Geometry>
                                                                    <GeometryGroup>
                                                                        <GeometryGroup.Children>
                                                                            <RectangleGeometry Rect="0,0,1,1" />
                                                                            <RectangleGeometry Rect="2,2,1,1" />
                                                                        </GeometryGroup.Children>
                                                                    </GeometryGroup>
                                                                </GeometryDrawing.Geometry>
                                                            </GeometryDrawing>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </DockPanel>

                                        <avd:DropDownButton
											x:Name="SinglePaneContextMenu"
											Grid.Column="1"
											Margin="1,1,1,0"
                                            Width="15"
											Height="15"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
											DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ToolButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Anchorable_CxMenu_Hint}"
											Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:BoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinMenu"
												Margin="0,0,0,1"
												Width="8"
												Height="8"
												Data="{DynamicResource PinMenu}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </avd:DropDownButton>

                                        <Button
											x:Name="PART_PinMaximize"
											Grid.Column="2"
											Margin="0,1,1,0"
                                            Width="15"
											Height="15"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Window_Maximize}"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:InverseBoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinMaximize"
												Width="9"
												Height="9"
												VerticalAlignment="Center"
												Data="{DynamicResource PinMaximize}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>

                                        <Button
											x:Name="PART_PinRestore"
											Grid.Column="2"
											Margin="0,1,1,0"
                                            Width="15"
											Height="15"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
											CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Window_Restore}"
											Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:BoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinRestore"
												Width="10"
												Height="10"
												Margin="1,1,0,0"
												VerticalAlignment="Center"
												Data="{DynamicResource PinRestore}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>

                                        <Button
											x:Name="PART_PinClose"
											Grid.Column="3"
											Margin="0,1,1,0"
                                            Width="15"
											Height="15"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											shell:WindowChrome.IsHitTestVisibleInChrome="True"
											Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
											Focusable="False"
											Style="{StaticResource avdThemeVs2013ButtonStyle}"
											ToolTip="{x:Static avdProperties:Resources.Anchorable_BtnClose_Hint}"
											Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avd:BoolToVisibilityConverter}}">
                                            <Path
												x:Name="PART_ImgPinClose"
												Width="10"
												Height="10"
												Margin="1,0,0,1"
												VerticalAlignment="Center"
												Data="{DynamicResource PinClose}"
												Fill="{DynamicResource DocumentWellTabButtonSelectedInactiveGlyph}"
												Stretch="Uniform" />
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="8" />
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter TargetName="Header" Property="Background" Value="{DynamicResource ToolWindowCaptionActiveBackground}" />
                            <Setter TargetName="Header" Property="TextElement.Foreground" Value="{DynamicResource ToolWindowCaptionActiveText}" />
                            <Setter TargetName="DragHandleGeometryPlaceholder" Property="Fill" Value="{DynamicResource ToolWindowCaptionActiveGrip}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_PinClose" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_PinClose" Property="ToolTip" Value="{x:Static avdProperties:Resources.Document_Close}" />
                        </DataTrigger>
                        <!--  Document Well : Tab : Button / Selected, inactive, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, inactive, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedInactivePressedGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true">
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveGlyph}" />
                        </DataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, hovered  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActiveHoveredGlyph}" />
                        </MultiDataTrigger>

                        <!--  Document Well : Tab : Button / Selected, active, pressed  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsChecked, ElementName=SinglePaneContextMenu}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="SinglePaneContextMenu" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="SinglePaneContextMenu" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMenu" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinMaximize" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinMaximize" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinMaximize" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinRestore" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinRestore" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinRestore" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="true" />
                                <Condition Binding="{Binding IsMouseCaptured, ElementName=PART_PinClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_PinClose" Property="Background" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBackground}" />
                            <Setter TargetName="PART_PinClose" Property="BorderBrush" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedBorder}" />
                            <Setter TargetName="PART_ImgPinClose" Property="Fill" Value="{DynamicResource DocumentWellTabButtonSelectedActivePressedGlyph}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avd:LayoutAutoHideWindowControl}" TargetType="{x:Type avd:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource TabBackground}" />
        <Setter Property="AnchorableStyle">
            <Setter.Value>
                <Style TargetType="avd:LayoutAnchorableControl">
                    <Setter Property="BorderBrush" Value="{DynamicResource PanelBorderBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="avdThemeVs2013NavigatorWindowListBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
						RadiusX="2"
						RadiusY="2"
						Stroke="{DynamicResource PanelBorderBrush}"
						StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="avdThemeVs2013NavigatorWindowListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource avdThemeVs2013NavigatorWindowListBoxItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource NavigatorWindowForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="AutomationProperties.Name" Value="{Binding LayoutElement.Title}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
                        <Border x:Name="InnerBorder" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle
									x:Name="UpperHighlight"
									Fill="#75FFFFFF"
									Visibility="Collapsed" />
                                <ContentPresenter
									Grid.RowSpan="2"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource avdThemeVs2013NavigatorWindowListBoxItemSelectedFill}" />
                            <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                            <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
                        </Trigger>-->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource NavigatorWindowSelectedBackground}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource NavigatorWindowSelectedText}" />
                            <!--<Setter Property="BorderBrush" Value="#FF98DDFB" />-->
                            <!--<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />-->
                            <!--<Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />-->
                        </Trigger>
                        <!--
                            <MultiTrigger>
                            <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource avd_ThemeMetro_NavigatorWindowListBoxItemSelectedHoverFill}"/>
                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            </MultiTrigger>
						-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avd:NavigatorWindow}" TargetType="{x:Type avd:NavigatorWindow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <!--<Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    GlassFrameThickness="4"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avd:NavigatorWindow}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{DynamicResource NavigatorWindowBackground}"
							BorderBrush="{DynamicResource PanelBorderBrush}"
							BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image
											Source="{Binding SelectedDocument.LayoutElement.IconSource, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:NullToDoNothingConverter}}"
											Stretch="None"
											Visibility="{Binding SelectedDocument.LayoutElement.IconSource, RelativeSource={RelativeSource TemplatedParent}, Converter={avd:BoolToVisibilityConverter}}" />
                                        <TextBlock
											x:Name="selectedElementTitle"
											Grid.Column="1"
											Margin="4,0,0,0"
											VerticalAlignment="Center"
											FontWeight="Bold"
											Foreground="{DynamicResource NavigatorWindowForeground}"
											Text="{Binding SelectedDocument.LayoutElement.Title, RelativeSource={RelativeSource TemplatedParent}}"
											TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <TextBlock
										x:Name="selectedElementDescription"
										VerticalAlignment="Center"
										Text="{Binding SelectedDocument.LayoutElement.Description}"
										TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Border
									Grid.Row="1"
									MinHeight="200"
									Background="{DynamicResource NavigatorWindowBackground}"
									BorderBrush="Transparent"
									BorderThickness="0,1,0,0">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock
												Margin="0,3,0,4"
												FontWeight="Bold"
												Foreground="{DynamicResource NavigatorWindowForeground}"
												Text="{x:Static avdProperties:Resources.Active_ToolWindows}" />
                                            <ListBox
												x:Name="PART_AnchorableListBox"
												AutomationProperties.Name="{x:Static avdProperties:Resources.Active_ToolWindows}"
												Grid.Row="1"
												MaxHeight="400"
												Background="Transparent"
												ItemContainerStyle="{StaticResource avdThemeVs2013NavigatorWindowListBoxItemStyle}"
												ItemsSource="{Binding Anchorables}"
												SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={avd:NullToDoNothingConverter}}" Stretch="None" />
                                                            <TextBlock
																Grid.Column="1"
																Margin="4,0,0,0"
																Text="{Binding LayoutElement.Title}"
																TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Grid>
                                        <Grid Grid.Column="1" Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock
												Margin="0,3,0,4"
												FontWeight="Bold"
												Foreground="{DynamicResource NavigatorWindowForeground}"
												Text="{x:Static avdProperties:Resources.Active_Files}" />

                                            <ListBox
												x:Name="PART_DocumentListBox"
												AutomationProperties.Name="{x:Static avdProperties:Resources.Active_Files}"
												Grid.Row="1"
												MaxHeight="400"
												Background="Transparent"
												ItemContainerStyle="{StaticResource avdThemeVs2013NavigatorWindowListBoxItemStyle}"
												ItemsSource="{Binding Documents}"
												SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="150" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image Source="{Binding LayoutElement.IconSource, Converter={avd:NullToDoNothingConverter}}" Stretch="None" />
                                                            <TextBlock
																Grid.Column="1"
																Margin="4,0,0,0"
																Text="{Binding LayoutElement.Title}"
																TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Vertical" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="2" Margin="5">
                                    <TextBlock
										VerticalAlignment="Center"
										Foreground="{DynamicResource NavigatorWindowForeground}"
										Text="{Binding SelectedDocument.LayoutElement.ToolTip, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedDocument" Value="{x:Null}">
                            <Setter TargetName="selectedElementTitle" Property="Text" Value="{Binding SelectedAnchorable.LayoutElement.Title}" />
                            <Setter TargetName="selectedElementDescription" Property="Text" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>